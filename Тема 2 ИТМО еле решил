namespace Задачи_от_Сереги
{
    internal class Program
    {
        static void Main(string[] args)
        {//ТЕМА 2
         //поиск радиуса и площади внутри окружности.
            double L = 278; 
            double Radius = L / (2 * Math.PI);
            double S_circle = Math.PI * (Math.Pow(Radius, 2));
            Console.WriteLine("радиус окружности: " +  Radius);
            Console.WriteLine("площадь круга " + S_circle);
            Console.WriteLine();

            //периметр и площадь прямооугольника с известными противоположнымивершинами вершинами.
            double x1 = 5; double x2 = 1; double y1 = 3; double y2 = 7; // даны координаты вершин
            double storona_a = Math.Abs(x1 - x2);
            double storona_b = Math.Abs(x1 - x2);
            double perimetr_pr = (storona_a + storona_b) * 2;
            double S2 = storona_a * storona_b;
            Console.WriteLine("периметр прямоугольника: " + perimetr_pr);
            Console.WriteLine("площадь прямоугольника: " + S2);
            Console.WriteLine();

            //третья задача с треугольником
            double x3; double y3;      // x1 и x2 уже объявлены выше
            x1 = 4; x2 = 10; x3 = 10; y1 = 7; y2 = 7; y3 = 3;     // даны координаты трех вершин
            double storona1 = Math.Sqrt(Math.Pow(Math.Abs(x1 - x2), 2) + Math.Pow(Math.Abs(y1 - y2), 2));
            double storona2 = Math.Sqrt(Math.Pow(Math.Abs(x2 - x3), 2) + Math.Pow(Math.Abs(y2 - y3), 2));
            double storona3 = Math.Sqrt(Math.Pow(Math.Abs(x3 - x1), 2) + Math.Pow(Math.Abs(y3 - y1), 2));

            double poluperimetr = (storona1 + storona2 + storona3) / 2;
            double perimetr_tr = poluperimetr * 2;
            Console.WriteLine("периметр треугольника: " + perimetr_tr);
            double S_tr = Math.Sqrt(poluperimetr * (poluperimetr - storona1) * (poluperimetr - storona2)  * (poluperimetr - storona3));
            Console.WriteLine("площадь треугольника: " + S_tr);
            Console.ReadKey();













        }


    }
}
